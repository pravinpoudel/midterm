{"version":3,"sources":["input.js"],"names":["Keyboard","_classCallCheck","this","keys","handlers","keyPress","bind","keyRelease","register","window","addEventListener","e","key","elapsedTime","hasOwnProperty","console","warn","concat"],"mappings":"uZAAMA,oBACJ,SAAAA,IAAcC,gBAAAC,KAAAF,GACZE,KAAKC,KAAO,GACZD,KAAKE,SAAW,GAChBF,KAAKG,SAAWH,KAAKG,SAASC,KAAKJ,MACnCA,KAAKK,WAAaL,KAAKK,WAAWD,KAAKJ,MACvCA,KAAKM,SAAWN,KAAKM,SAASF,KAAKJ,MACnCO,OAAOC,iBAAiB,UAAWR,KAAKG,UAPtCL,OAAAA,iBAQsB,QAASE,KAAKK,kEAPxCI,GAAcT,KAAAC,KAAAQ,EAAAC,MAAA,qCAEPR,UACAC,KAAAA,KAAWM,EAAAC,sCAGTF,EAAAA,GACPD,KAAAA,SAAOC,GAAAA,iCAeFG,GACL,IAAK,IAAID,KAAOV,KAAKC,KACfD,KAAKC,KAAKW,eAdNF,KACLT,KAAMC,SAAQQ,GACpBV,KAAAE,SAAAQ,GAAAC,GAgBOE,QAAQC,KAAR,GAAAC,OAAgBL,EAAhB","file":"input.min.js","sourcesContent":["class Keyboard {\r\n  constructor() {\r\n    this.keys = {};\r\n    this.handlers = {};\r\n    this.keyPress = this.keyPress.bind(this);\r\n    this.keyRelease = this.keyRelease.bind(this);\r\n    this.register = this.register.bind(this);\r\n    window.addEventListener(\"keydown\", this.keyPress);\r\n    window.addEventListener(\"keyup\", this.keyRelease);\r\n  }\r\n\r\n  keyPress(e) {\r\n    this.keys[e.key] = true;\r\n  }\r\n\r\n  keyRelease(e) {\r\n    delete this.keys[e.key];\r\n  }\r\n\r\n  register(key, handler) {\r\n    this.handlers[key] = handler;\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    for (let key in this.keys) {\r\n      if (this.keys.hasOwnProperty(key)) {\r\n        if (this.handlers[key]) {\r\n          this.handlers[key](elapsedTime);\r\n        } else {\r\n          console.warn(`${key} does not have handler registered for it`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}