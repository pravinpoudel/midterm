{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","loadScripts","length","entry","href","window","location","assetOrder","loadAssets","assets","onSuccess","onError","mainComplete","canvas","document","getElementById","console","log","GameState","menu","initialize","loaderParent","style","Math","floor","totalItems","loaderInitiate","setTimeout","source","clearInterval","timerId","width","loadAsset","xhr","XMLHttpRequest","asset","onload","fileExtension","substr","lastIndexOf","open","responseType","Image","Audio","URL","revokeObjectURL","src","context","getContext","createObjectURL","response","error","status","shift","key","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    \r\n   \r\n    {\r\n      scripts: [\"highscore\"],\r\n      message: \"highscore intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n       scripts: [\"meter\"],\r\n       message: \"meter intialized\",\r\n       onComplete: null,\r\n    },\r\n\r\n    {\r\n        scripts: [\"marker\"],\r\n        message: \"marker intialized\",\r\n        onComplete: null,\r\n     },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n    {\r\n        scripts: [\"utility/initialize\"],\r\n        message: \"game menu intialized\",\r\n        onComplete: null,\r\n      },\r\n\r\n  \r\n  ];\r\n  var href = window.location.href;\r\n  var dir = href.substring(0, href.lastIndexOf(\"/\")) + \"/\";\r\n\r\n  let assetOrder = [];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          console.log(error.message);\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    canvas = document.getElementById(\"canvas-main\");\r\n    context = canvas.getContext(\"2d\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}